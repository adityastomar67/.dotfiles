{
  "debug.allowBreakpointsEverywhere" : true,
  "editor.cursorStyle"               : "underline-thin",
  "editor.cursorBlinking"            : "phase",
  "editor.accessibilitySupport"      : "off",
  "editor.codeLens"                  : true,
  "editor.colorDecorators"           : true,
  "editor.dragAndDrop"               : false,
  "editor.folding"                   : false,
  "editor.showFoldingControls"       : "mouseover",
  "editor.fontFamily"                : "'Operator Mono Lig', 'MonoLisa', 'Fira Code'",
  "editor.fontLigatures"             : true,
  "editor.tokenColorCustomizations"  : {
    "textMateRules": [
      {
        "scope": [
          "keyword.other.unit",
          "support.type.property-name.css",
          "support.type.vendored.property-name.css",
          "support.constant.vendored.property-value.css",
          "meta.import.ts meta.block.ts variable.other.readwrite.alias.ts",
          "meta.import.tsx meta.block.tsx variable.other.readwrite.alias.tsx",
          "meta.import.js variable.other",
          "meta.export.ts meta.block.ts variable.other.readwrite.alias.ts",
          "meta.export.tsx meta.block.tsx variable.other.readwrite.alias.tsx",
          "meta.export.js variable.other",
          "entity.name.function.ts",
          "entity.name.function.tsx",
          "support.type.primitive",
          "entity.name.tag.yaml",
          "entity.other.attribute-name",
          "meta.tag.sgml.doctype.html",
          "entity.name.tag.doctype",
          "meta.tag.sgml.doctype",
          "entity.name.tag.custom",
          "source.js.jsx keyword.control.flow.js",
          "support.type.property.css",
          "support.function.basic_functions",
          "constant.other.color.rgb-value.hex.css",
          "constant.other.rgb-value.css",
          "variable.assignment.coffee",
          "support.function.basic_functions",
          "keyword.operator.expression.typeof",
          "keyword.operator.type.annotation",
          "variable.object.property.ts",
          "variable.object.property.js",
          "variable.object.property.jsx",
          "variable.object.property.tsx",
          "assignment.coffee",
          "entity.name.type.ts",
          "support.constant.math",
          "meta.object-literal.key",
          "meta.var.expr storage.type",
          "variable.scss",
          "variable.sass",
          "variable.other.less",
          "variable.parameter.url.scss",
          "variable.parameter.url.sass",
          "parameter",
          "string",
          "italic",
          "quote",
          "keyword",
          "storage",
          "language",
          "constant.language",
          "variable.language",
          "type .function",
          "type.function",
          "storage.type.class",
          "type.var",
          "meta.parameter",
          "variable.parameter",
          "meta.parameters",
          "keyword.control",
          "modifier",
          "this",
          "comment"
        ],
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "scope": [
          "markup.bold",
          "keyword",
          "keyword.operator",
          "keyword.other.template",
          "keyword.other.substitution",
          "storage.type.function.arrow",
          "constant.other.color",
          "punctuation.accessor",
          "markup.bold",
          "markup.bold string",
          "markdown.heading",
          "markup.inline.raw punctuation.definition.raw",
          "markup.heading",
          "storage.type.annotation",
          "punctuation.bracket.angle",
          "keyword.other.new",
          "punctuation.separator.question-mark.cs",
          "storage.type.generic.wildcard",
          "source.go keyword.operator",
          "punctuation.separator.namespace",
          "constant.other.symbol.ruby punctuation.definition.constant.ruby",
          "punctuation.separator.hash.cs",
          "constant.other.symbol.ruby punctuation.definition.constant.ruby",
          "constant.other.symbol.hashkey.ruby punctuation.definition.constant.ruby",
          "keyword.declaration.scala",
          "entity.name.type.annotation.kotlin",
          "storage.type.objc",
          "markup punctuation.definition",
          "punctuation.section.directive",
          "punctuation.definition.preprocessor",
          "source.ruby punctuation.definition.variable",
          "punctuation.separator.method",
          "source.graphql support.type.builtin",
          "source.ocaml variable.interpolation string",
          "source.wsd keyword.other.activity",
          "support.function.textbf",
          "meta.function.constructor entity.name.function",
          "meta.function.destructor entity.name.function",
          "support.function.builtin.rust",
          "storage.type.function.coffee",
          "storage.type.function.pug",
          "storage.type.function.python",
          "variable.parameter",
          "source.cs entity.name.variable.parameter",
          "meta.function.parameters variable.other",
          "parameter.variable.function",
          "meta.function.parameters variable punctuation.definition.variable.php"
        ],
        "settings": {
          "fontStyle": "bold italic"
        }
      },
      {
        "name": "Bold-Italic",
        "scope": [
          "markup.bold markup.italic",
          "markup.italic markup.bold",
          "markup.quote markup.bold",
          "markup.bold markup.italic string",
          "markup.italic markup.bold string",
          "markup.quote markup.bold string",
          "text.html punctuation.section.embedded",
          "variable.other.c",
          "storage.modifier.lifetime.rust",
          "entity.name.lifetime.rust",
          "source.rust meta.attribute.rust",
          "meta.attribute.id entity.other.attribute-name",
          "keyword.other.fn.rust",
          "source.ocaml punctuation.definition.tag emphasis"
        ],
        "settings": {
          "fontStyle": "bold italic"
        }
      },
      {
        "name"  : "Underline",
        "scope" : [
          "entity.name.type.namespace"
        ],
        "settings": {
          "fontStyle": "underline"
        }
      },
      {
        "name"  : "Normal",
        "scope" : [
          "keyword.operator.logical",
          "keyword.operator.arithmetic",
          "keyword.operator.bitwise",
          "keyword.operator.increment",
          "keyword.operator.ternary",
          "keyword.operator.comparison",
          "keyword.operator.assignment",
          "keyword.operator.operator",
          "keyword.operator.or.regexp",
          "keyword.operator.expression.in",
          "keyword.operator.type",
          "keyword.begin.tag.ejs",
          "source.python meta.function.decorator.python support.type.python",
          "source.cs keyword.other",
          "keyword.other.var.cs",
          "source.go keyword",
          "storage.modifier.static.rust",
          "variable.parameter.r",
          "variable.parameter.handlebars",
          "storage.modifier.import",
          "storage.modifier.package",
          "meta.class.identifier storage.modifier",
          "keyword.operator.other.powershell",
          "source.lua storage.type.function",
          "source.scala keyword.declaration",
          "source.css variable.parameter",
          "string.interpolated variable.parameter",
          "source.apacheconf keyword",
          "keyword.other.julia",
          "storage.modifier.using.vala",
          "source.objc keyword.other.property.attribute",
          "source.sql keyword.other",
          "keyword.other.using.vala",
          "keyword.operator.function.infix",
          "keyword.control.directive",
          "keyword.other.rust",
          "keyword.other.declaration-specifier.swift",
          "entity.name.function.swift",
          "keyword.control.function-end.lua",
          "keyword.control.class",
          "keyword.control.def",
          "punctuation.definition.variable",
          "entity.name.section.latex",
          "source.ocaml keyword markup.underline",
          "source.ocaml constant.language constant.numeric entity.other.attribute-name.id.css",
          "source.reason entity.other.attribute-name constant.language constant.numeric",
          "keyword.format.specifier.fsharp",
          "entity.name.section.fsharp",
          "binding.fsharp keyword",
          "binding.fsharp keyword.symbol",
          "record.fsharp keyword",
          "keyword.symbol.fsharp",
          "entity.name.section.fsharp keyword",
          "namespace.open.fsharp keyword",
          "namespace.open.fsharp entity",
          "source.cpp keyword.other",
          "source.c keyword.other",
          "keyword.other.unit",
          "storage.modifier.array.bracket",
          "keyword.control.default",
          "meta.import.haskell keyword",
          "keyword.declaration.dart",
          "source.wsd keyword.other",
          "keyword.other.skinparam",
          "source.css keyword.control",
          "source.css keyword.operator",
          "keyword.language.gherkin.feature.scenario",
          "keyword.control.cucumber.table",
          "source.toml entity.other.attribute-name",
          "source.toml keyword",
          "entity.name.section",
          "entity.name.function",
          "meta.require",
          "support.function.any-method",
          "variable.function"
        ],
        "settings": {
          "fontStyle": ""
        }
      }
    ]
  },
  "editor.fontSize"                             : 16,
  "explorer.openEditors.visible"                : 0,
  "editor.glyphMargin"                          : true,
  "editor.lineNumbers"                          : "off",
  "editor.minimap.enabled"                      : false,
  "editor.renderWhitespace"                     : "selection",
  "editor.inlineSuggest.enabled"                : true,
  "editor.renderIndentGuides"                   : false,
  "editor.renderLineHighlight"                  : "none",
  "editor.hideCursorInOverviewRuler"            : false,
  "explorer.compactFolders"                     : false,
  "editor.occurrencesHighlight"                 : false,
  "editor.overviewRulerBorder"                  : false,
  "editor.rulers"                               : [],
  "editor.scrollBeyondLastLine"                 : false,
  "editor.snippetSuggestions"                   : "none",
  "editor.cursorSurroundingLines"               : 3,
  "editor.useTabStops"                          : true,
  "editor.formatOnPaste"                        : false,
  "editor.formatOnSave"                         : false,
  "editor.tabCompletion"                        : "on",
  "editor.wordWrap"                             : "on",
  "editor.wordWrapColumn"                       : 80,
  "editor.hover.enabled"                        : false,
  "editor.gotoLocation.multipleReferences"      : "peek",
  "editor.gotoLocation.multipleDefinitions"     : "peek",
  "editor.gotoLocation.multipleDeclarations"    : "peek",
  "editor.gotoLocation.multipleImplementations" : "peek",
  "editor.gotoLocation.multipleTypeDefinitions" : "peek",
  "explorer.confirmDragAndDrop"                 : false,
  "explorer.confirmDelete"                      : false,
  "explorer.decorations.badges"                 : false,
  "extensions.ignoreRecommendations"            : true,
  "diffEditor.renderSideBySide"                 : false,
  "files.associations"                          : {
    ".babelrc"  : "jsonc",
    ".eslintrc" : "jsonc",
    "*.pyi"     : "python",
    "*.bats"    : "shellscript"
  },
  "files.autoSave" : "afterDelay",
  "files.exclude"  : {
    "**/.DS_Store"        : true,
    "**/node_modules"     : true,
    "**/bower_components" : true,
    "**/__pycache__"      : true,
    "**/.cache"           : true,
    "**/.idea"            : true,
    "**/.pytest_cache"    : true,
    "**/.mypy_cache"      : true,
    "**/.venv"            : true,
    "**/.coverage"        : true,
    "**/*.py[co]"         : true,
    "**/htmlcoverage"     : true,
    "**/docs/build"       : true
  },
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter.notebook.ipynb"
  },
  "telemetry.enableCrashReporter"            : false,
  "telemetry.enableTelemetry"                : false,
  "terminal.integrated.defaultProfile.osx"   : "zsh",
  "terminal.integrated.defaultProfile.linux" : "zsh",
  "terminal.integrated.env.osx"              : {
    "SOBOLE_THEME_MODE": "dark"
  },
  "terminal.integrated.enableBell"         : true,
  "window.menuBarVisibility"               : "hidden",
  "window.clickThroughInactive"            : false,
  "window.newWindowDimensions"             : "maximized",
  "workbench.editor.labelFormat"           : "medium",
  "workbench.editor.tabCloseButton"        : "off",
  "workbench.startupEditor"                : "newUntitledFile",
  "workbench.sideBar.location"             : "right",
  "workbench.statusBar.visible"            : false,
  "workbench.tips.enabled"                 : false,
  "workbench.editor.enablePreview"         : false,
  "workbench.tree.renderIndentGuides"      : "none",
  "workbench.tree.indent"                  : 20,
  "breadcrumbs.enabled"                    : false,
  "workbench.activityBar.visible"          : false,
  "workbench.editor.showTabs"              : false,
  "workbench.editor.highlightModifiedTabs" : false,
  "workbench.editor.showIcons"             : false,
  "workbench.iconTheme"                    : "material-icon-theme",
  "workbench.editor.decorations.badges"    : false,
  "workbench.editor.decorations.colors"    : false,
  "window.zoomLevel"                       : -2,
  "tabnine.experimentalAutoImports"        : true,
  "git.autofetch"                          : false,
  "git.showInlineOpenFileAction"           : false,
  "git.autorefresh"                        : true,
  "git.decorations.enabled"                : true,
  "python.showStartPage"                   : false,
  "python.formatting.provider"             : "none",
  "python.pythonPath"                      : "${workspaceFolder}/.venv/bin/python3",
  "python.terminal.activateEnvironment"    : true,
  "python.workspaceSymbols.enabled"        : false,
  "python.linting.enabled"                 : false,
  "code-runner.clearPreviousOutput"        : true,
  "code-runner.runInTerminal"              : true,
  "code-runner.saveAllFilesBeforeRun"      : true,
  "code-runner.executorMap"                : {
    "javascript"         : "node",
    "java"               : "cd $dir && javac $fileName && java $fileNameWithoutExt",
    "c"                  : "clear && cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "cpp"                : "clear && cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "objective-c"        : "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "php"                : "php",
    "python"             : "python -u",
    "perl"               : "perl",
    "perl6"              : "perl6",
    "ruby"               : "ruby",
    "go"                 : "go run",
    "lua"                : "lua",
    "groovy"             : "groovy",
    "powershell"         : "powershell -ExecutionPolicy ByPass -File",
    "bat"                : "cmd /c",
    "shellscript"        : "bash",
    "fsharp"             : "fsi",
    "csharp"             : "scriptcs",
    "vbscript"           : "cscript //Nologo",
    "typescript"         : "ts-node",
    "coffeescript"       : "coffee",
    "scala"              : "scala",
    "swift"              : "swift",
    "julia"              : "julia",
    "crystal"            : "crystal",
    "ocaml"              : "ocaml",
    "r"                  : "Rscript",
    "applescript"        : "osascript",
    "clojure"            : "lein exec",
    "haxe"               : "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
    "rust"               : "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
    "racket"             : "racket",
    "scheme"             : "csi -script",
    "ahk"                : "autohotkey",
    "autoit"             : "autoit3",
    "dart"               : "dart",
    "pascal"             : "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
    "d"                  : "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
    "haskell"            : "runhaskell",
    "nim"                : "nim compile --verbosity: 0 --hints : off --run",
    "lisp"               : "sbcl --script",
    "kit"                : "kitc --run",
    "v"                  : "v run",
    "sass"               : "sass --style expanded",
    "scss"               : "scss --style expanded",
    "less"               : "cd $dir && lessc $fileName $fileNameWithoutExt.css",
    "FortranFreeForm"    : "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran-modern"     : "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran_fixed-form" : "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran"            : "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"
  },
  "[html]": {
    "editor.defaultFormatter" : "vscode.html-language-features",
    "editor.tabSize"          : 4
  },
  "[javascript]": {
    "editor.defaultFormatter" : "esbenp.prettier-vscode",
    "editor.tabSize"          : 4
  },
  "[cpp]": {
    "editor.wordBasedSuggestions"         : true,
    "editor.suggest.insertMode"           : "replace",
    "editor.semanticHighlighting.enabled" : true,
    "editor.tabSize"                      : 4
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.python"
  },
  "python.formatting.autopep8Path"                  : "black",
  "python.languageServer"                           : "Pylance",
  "typescript.updateImportsOnFileMove.enabled"      : "never",
  "typescript.suggest.autoImports"                  : false,
  "javascript.suggest.autoImports"                  : false,
  "javascript.updateImportsOnFileMove.enabled"      : "never",
  "vetur.completion.autoImport"                     : false,
  "vetur.experimental.templateInterpolationService" : true,
  "rust-analyzer.inlayHints.enable"                 : false,
  "workbench.colorTheme"                            : "Andromeda Colorizer",
  "editor.semanticHighlighting.enabled"             : false,
  "workbench.colorCustomizations"                   : {
    "activityBar.activeBorder"                 : "#e5b358",
    "activityBar.foreground"                   : "#797d7b",
    "gitDecoration.modifiedResourceForeground" : "#d4cb68",
    "gitDecoration.addedResourceForeground"    : "#C2D94C",
    "editorSuggestWidget.highlightForeground"  : "#e5b358",
    "editorSuggestWidget.selectedBackground"   : "#1c2a42",
    "tab.inactiveForeground"                   : "#676b6a",
    "sideBar.foreground"                       : "#b3b1adBB",
    "sideBarTitle.foreground"                  : "#FFFFFF",
    "editor.foldBackground"                    : "#ff000000"
  },
  "glassit.alpha"                              : 220,
  "bracketPairColorizer.depreciation-notice"   : false,
  "prettier.trailingComma"                     : "es5",
  "prettier.tabWidth"                          : 4,
  "prettier.semi"                              : false,
  "prettier.singleQuote"                       : true,
  "security.workspace.trust.untrustedFiles"    : "open",
  "github-enterprise.uri"                      : "vscode://vscode.github-authentication/did-authenticate?windowid=1&code=503fca41a4dc646fd075&state=0afbe2f6-e2ea-452b-a7ad-1e09c902b6cb",
  "editor.experimental.stickyScroll.enabled"   : true,
  "editor.smoothScrolling"                     : true,
  "editor.letterSpacing"                       : 0.2,
  "explorer.experimental.fileNesting.enabled"  : true,
  "explorer.experimental.fileNesting.expand"   : false,
  "explorer.experimental.fileNesting.patterns" : {
    ".gitignore"      : ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    "*.js"            : "$(capture).js.map, $(capture).min.js, $(capture).d.ts",
    "*.jsx"           : "$(capture).js",
    "*.ts"            : "$(capture).js, $(capture).*.ts",
    "*.tsx"           : "$(capture).ts",
    "*.vue"           : "$(capture).*.ts, $(capture).*.js",
    "index.d.ts"      : "*.d.ts",
    "shims.d.ts"      : "*.d.ts",
    "*.cpp"           : "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cxx"           : "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cc"            : "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.c"             : "$(capture).h",
    "go.mod"          : ".air*, go.sum",
    "default.nix"     : "shell.nix",
    "flake.nix"       : "flake.lock",
    "BUILD.bazel"     : "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt"  : "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
    ".clang-tidy"     : ".clang-format",
    "*.pubxml"        : "$(capture).pubxml.user",
    "*.asax"          : "$(capture).*.cs, $(capture).*.vb",
    "*.ascx"          : "$(capture).*.cs, $(capture).*.vb",
    "*.ashx"          : "$(capture).*.cs, $(capture).*.vb",
    "*.aspx"          : "$(capture).*.cs, $(capture).*.vb",
    "*.master"        : "$(capture).*.cs, $(capture).*.vb",
    "*.resx"          : "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.dart"          : "$(capture).freezed.dart, $(capture).g.dart",
    ".env"            : "*.env, .env.*, env.d.ts",
    "dockerfile"      : ".dockerignore, docker-compose.yml, dockerfile*",
    "package.json"    : ".browserslist*, .circleci*, .codecov, .commitlint*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack.config.*, workspace.json, xo.config.*, yarn*",
    "rush.json"       : ".browserslist*, .circleci*, .codecov, .commitlint*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack.config.*, workspace.json, xo.config.*, yarn*",
    "pubspec.yaml"    : ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock",
    "readme.*"        : "authors, backers.md, changelog*, citation*, code_of_conduct.md, codeowners, contributing.md, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors.md",
    "cargo.toml"      : ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "gemfile"         : ".ruby-version, gemfile.lock",
    "composer.json"   : ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "*.csproj"        : "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vbproj"        : "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "mix.exs"         : ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, mix.lock",
    "*.ex"            : "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "vite.config.*"   : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vue.config.*"    : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*"   : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "next.config.*"   : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "svelte.config.*" : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "remix.config.*"  : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "artisan"         : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*"  : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "gatsby-config.*" : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  }
}
